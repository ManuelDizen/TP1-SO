Análisis con Valgrind, CPP, y PVS-Studio:

1) Valgrind
Error 1: 
    Valgrind indica una escritura inválida en: 

    ==278== Invalid write of size 1
    ==278==    at 0x401CDA: isACnf (solve.c:286)

    Donde el código dice:

    while((c = *auxp) != '\0'){
            ext[i++] = c;
            auxp += 1;
        }
    ext[i] = '\0';

    Siendo la última linea la 286

    No consideramos que sea un error, es una escritura para marcar el final del string.

Error 2:
    ==278== Invalid read of size 1
    ==278==    at 0x4C2D1EB: strcmp (vg_replace_strmem.c:755)
    ==278==    by 0x401CED: isACnf (solve.c:287)

Código:
    int a = strcmp(".cnf", ext);
    return a;

Es un strcmp para ver si la extensión del archivo se corresponde con un .cnf
Nuevamente, creemos que no se trata de un error

Error 3:
    ==278==  Address 0x5605104 is 0 bytes after a block of size 4 alloc'd
    ==278==    at 0x4C28C20: malloc (vg_replace_malloc.c:296)
    ==278==    by 0x401C76: isACnf (solve.c:275)

Código:
    int isACnf(char * path){
        char * auxp = strrchr(path, '.'); 
        char * ext = malloc(sizeof(MAX_EXTENSION));

No comprendemos porqué habría un error de malloc aquí (el chequeo posterior por si es nulo esta realizado).



CPP-Check:

root@5b7d7d25ca0e:~# cppcheck --enable=all solve.c queue.c slave.c view.c
Checking queue.c...
1/4 files checked 8% done
Checking slave.c...
[slave.c:44]: (style) The scope of the variable 'bytesRead' can be reduced.
2/4 files checked 22% done
Checking solve.c...
[solve.c:108]: (portability) 'currentShmAddr' is of type 'void *'. When using void pointers in calculations, the behaviour is undefined.
3/4 files checked 88% done
Checking view.c...
[view.c:92]: (portability) 'shmAddr' is of type 'void *'. When using void pointers in calculations, the behaviour is undefined.
[view.c:12]: (error) Buffer overrun possible for long command line arguments.
4/4 files checked 100% done
Checking usage of global functions..
(information) Cppcheck cannot find all the include files (use --check-config for details)

Error 1: 
    int bytesRead = 0;
    while(keepReading){
        bytesRead = read(fd, &keepReading, 1);
        if(bytesRead <= 0){
            perror("Failed to read pipe\n");
            exit(EXIT_FAILURE);
        }
        ...
    }

Creemos que, dado que por como esta escrito el código, se accederá de cualquier manera al ciclo while,
definirla afuera o adentro es indiferente.

Errores 2 y 3: Nosotros tratamos los void * como direcciones de memoria, y es por eso que utilizamos
aritmetica de punteros con los mismos. 

Error 4: 
    strcpy(shmName, argv[1]);

shmName esta inicializado en un tamaño de 100 bytes, por lo que sería necesario un string largo para
generar un problema. De cualquier manera, por la forma en que esta elaborado el código, el programa
encontrará un problema antes de querer poner cualquier string que no sea "shm", dado que no existe
otra manera posible de ejecutar el código.


3) PVS-Studio:

root@481ce76442ba:~# cat report.tasks
pvs-studio.com/en/docs/warnings/	1	err	Help: The documentation for all analyzer warnings is available here: https://pvs-studio.com/en/docs/warnings/.
/root/slave.c	22	err	V579 The write function receives the pointer and its size as arguments. It is possibly a mistake. Inspect the third argument.
/root/slave.c	22	err	V512 A call of the 'write' function will lead to overflow of the buffer 'finished'.
/root/slave.c	19	note	V776 Potentially infinite loop.
/root/slave.c	54	warn	V701 realloc() possible leak: when realloc() fails in allocating memory, original pointer 'path' is lost. Consider assigning realloc() to a temporary pointer.
/root/slave.c	63	warn	V701 realloc() possible leak: when realloc() fails in allocating memory, original pointer 'path' is lost. Consider assigning realloc() to a temporary pointer.
/root/slave.c	77	err	V579 The write function receives the pointer and its size as arguments. It is possibly a mistake. Inspect the third argument.
/root/slave.c	77	err	V512 A call of the 'write' function will lead to overflow of the buffer 'finished'.
/root/slave.h	12	note	V1003 The macro 'BLOCK' is a dangerous expression. The expression must be surrounded by parentheses.
/root/solve.c	287	note	V522 There might be dereferencing of a potential null pointer 'auxp'.
/root/solve.c	369	warn	V560 A part of conditional expression is always true: totalFiles > 0.
/root/solve.c	411	warn	V701 realloc() possible leak: when realloc() fails in allocating memory, original pointer 'path' is lost. Consider assigning realloc() to a temporary pointer.
/root/solve.c	420	warn	V701 realloc() possible leak: when realloc() fails in allocating memory, original pointer 'path' is lost. Consider assigning realloc() to a temporary pointer.
/root/view.c	14	warn	V755 A copy from unsafe data source to a buffer of fixed size. Buffer overflow is possible.
/root/view.c	93	warn	V1044 Loop break conditions do not depend on the number of iterations.

Note de línea 19 de "slave.c": Es intencionalmente un loop infinito, que será finalizado una vez que el proceso esclavo
no sea mas necesario.

Warnings de lineas 54 y 63 de "slave.c": No es necesario preservar los punteros, si no hay mas memoria cierra el programa.

Note de linea 12 de "slave.h": Corregido.
Note de línea 287 de "solve.c": Corregido.

Warns de 411 y 420 de "solve.c": Explicación igual a la de "slave.c"

Warn de linea 14 de "view.c": Se estima un tamaño maximo para un nombre de shared memory. Pero, por las dudas
el nombre lo estamos estableciendo nosotros, para achicar el margen de error.